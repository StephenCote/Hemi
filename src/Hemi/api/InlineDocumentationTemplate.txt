/// <source>
/// <name>hemi.app</name>
/// <project>
/// 	<name>Hemi JavaScript Framework</name>
/// 	<url-title>Hemi JavaScript Framework</url-title>
/// 	<url>/Hemi/</url>
/// </project>
///
/// <package>
///	<path>hemi.app</path>
///	<library>hemi</library>

///	<static-class>
///		<name>app</name>
///		<version>%FILE_VERSION%</version>
///		<description>Convenience methods for instrumenting the Hemi.app.* libraries.</description>
///
///
///	</static-class>

/// <class>
///		<name>ApplicationComponentInstance</name>
///		<version>%FILE_VERSION%</version>
///		<description>A code fragment in a private scope that may be bound to HTML Nodes, and/or XHTMLComponent objects, and which provides a controlled environment for code execution and management.</description>
///
///
/// </class>

/// <object>
///	<name>EngineObject</name>
/// 	<description>API definition for any object that may interoperate with Engine, principally the Object Registry.</description>
///
///	<property name = "space_element" type = "object">The DOM Node associated with this Space.</property>
/// </object>

/// <property type = "array" get = "1" private = "1">
/// 	<name>class_imports</name>
/// 	<description>Merge definitions.</description>
/// </property>

/// <method internal = "1" virtual = "1">
/// 	<name>getObjectType</name>
///	<param name="o" type="Node" optional = "1">Node reference</param>
/// 	<return-value type = "String" name = "t">Named type for the object.</return-value>
/// 	<description>Returns the object identifier.</description>
/// </method>

/// <example>
///	<name>New Object</name>
///	<description>Create a new JavaScript object that conforms to the Engine for Web Applications API.</description>
///	<code>// Don't automatically add to registry</code>
///	<code>var oNewObject = org.cote.js.newObject("DemoType","1.0", false);</code>
///	<code>// Manually add new object to registry</code>
///	<code>org.cote.js.registry.ObjectRegistry.addObject(oNewObject);</code>
///	<code>// Automatically add to registry</code>
///	<code>var oNewObject2 = org.cote.js.newObject("DemoType","1.0",true);</code>
/// </example>

/// </package>
/// </source>