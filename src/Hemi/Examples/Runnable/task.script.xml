<?xml version="1.0" encoding="UTF-8"?>
<tasks>
    <task id = "StartHere" action-type = "none" action = "none" handler-type = "script" handler = "#cdata">
        <![CDATA[
			function RunTaskScript(oTask){
                Hemi.log("StartHere Task Script Running");
                alert("It's all good. The tasks executed. Check the log for details.");
                return true;
			}
		]]>
        <!--
            ResponseScript task - see notes in RequestScript
            Because RequestScript is auto-execute, it will automatically run and try to load ResponseScript,
            Which hasn't been imported yet.  Because RequestScript identifies ResponseScript as an action, but not
            as an auto-executed dependency, ResponseScript doesn't exist at that point.
            Therefore, ResponseScript must be declared first.
        -->
        <task rid ="ResponseScript" />
        <task rid ="RequestScript" auto-execute ="1" />

    </task>
    <task id = "RequestScript" action-type = "script" action = "#cdata" handler-type = "task" handler = "ResponseScript">
        <![CDATA[
            /// Task Script is loaded as a Hemi.app.module
            this.Initialize = function(){
                Hemi.log("RequestScript Task Script Initialized");
            };
            this.Unload = function(){
                Hemi.log("RequestScript Task Script Unloaded");
            };
            /// RunTaskScript is invoked by the Task Service
			function RunTaskScript(oTask){
                Hemi.log("RequestScript Task Script Running");
                return true;
			}
		]]>
        <!--
            This is an error because RequestScript depends on this task, so it won't handle it until ResponseScript is done.
            To have a task execute another task as a handler (via markup declaration) the target task must be declared ahead of time, such as in the parent.
        -->
        <!--
        <task rid ="ResponseScript" />
        -->
    </task>

    <task id = "ResponseScript" action-type = "none" action = "none" handler-type = "script" handler = "#cdata">
        <![CDATA[
            /// Task Script is loaded as a Hemi.app.module
            this.Initialize = function(){
                Hemi.log("ResponseScript Task Script Initialized");
            };
            this.Unload = function(){
                Hemi.log("ResponseScript Task Script Unloaded");
            };
			function RunTaskScript(oTask){
                Hemi.log("ResponseScript Task Script Running");
			   return true;
			}
		]]>
        <depends rid = "dom_event_window_load" />
    </task>
</tasks>
